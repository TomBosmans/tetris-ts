{"version":3,"sources":["hooks/useInterval.ts","components/Canvas/Canvas.tsx","constants/index.ts","lib/index.ts","utils/index.ts","state/reducer.ts","PlayfieldProvider.tsx","components/Arena/Arena.tsx","components/Keybindings/Keybindings.tsx","components/Score/Score.tsx","components/Level/Level.tsx","components/Preview/Preview.tsx","styled/index.ts","components/Playfield/Playfield.tsx","components/Game/Game.tsx","App.tsx","index.tsx"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Canvas","width","height","draw","ref","canvas","context","getContext","CELL","SCORES_PER_LINES","ACTION","CELL_COLORS","BLOCKS","EMPTY","O","S","Z","I","J","T","L","generateEmptyRow","Array","fill","randomBlock","possibleBlocks","randomIndex","Math","floor","random","length","shape","offsetX","offsetY","rotation","canBlockMove","block","grid","indexes","every","rowIndex","columnIndex","x","y","COLUMNS","ROWS","totalCompletedRows","map","row","cell","reduce","a","b","increaseScore","completedRowsCount","score","level","console","log","perLine","moveBlockDown","state","currentBlock","newGrid","forEach","splice","unshift","removeCompletedRows","restBlock","nextBlock","reducer","action","type","MOVE_BLOCK_DOWN","MOVE_BLOCK_LEFT","moveBlockLeft","MOVE_BLOCK_RIGHT","moveBlockRight","ROTATE_BLOCK_LEFT","rotations","currentRotation","rotateBlockLeft","ROTATE_BLOCK_RIGHT","initialState","keybindings","37","38","39","40","41","PlayfieldContext","createContext","dispatch","PlayfieldProvider","children","useReducer","Provider","value","Arena","useContext","clearRect","i","CELL_SIZE","j","fillStyle","fillRect","drawGrid","rectX","rectY","drawCurrentBlock","Keybindings","handleKey","event","keyCode","window","addEventListener","removeEventListener","Score","Level","Preview","Container","styled","div","SideContainer","Playfield","Game","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63310fb1.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\"\n\ntype CallbackFunction = () => void\n\nexport default function useInterval(callback: CallbackFunction, delay: number) {\n  const savedCallback = useRef<CallbackFunction>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null) return\n\n    const tick = () => savedCallback.current && savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n","import React, { useRef } from \"react\"\nimport { useInterval } from \"src/hooks\"\n\ntype Props = {\n  width: number\n  height: number\n  draw(context: CanvasRenderingContext2D): void\n  delay?: number\n}\n\nexport default function Canvas({ width, height, draw, delay=1000 }: Props) {\n  const ref = useRef<HTMLCanvasElement>(null)\n\n  useInterval(() => {\n    const canvas = ref.current\n    const context = canvas?.getContext(\"2d\")\n    if (context) draw(context)\n  }, delay);\n\n  return (\n    <canvas ref={ref} width={width} height={height} />\n  )\n}\n","import { Cell } from \"src/types\"\n\nexport const COLUMNS = 10\nexport const ROWS = 18\nexport const CELL_SIZE = 50\nexport const PADDING = 2\nexport const SCORES_PER_LINES = [0, 40, 100, 300, 1200]\nexport const SPEED_PER_LEVEL = [\n  48, 43, 38, 33, 28, 23, 18, 13,  8,  6,\n   5,  5,  5,  4,  4,  4,  3,  3,  3,  2,\n   2,  2,  2,  2,  2,  2,  2,  2,  2,  1\n]\n\nexport enum CELL {\n  EMPTY = \" \",\n      O = \"o\",\n      S = \"s\",\n      Z = \"z\",\n      I = \"i\",\n      J = \"j\",\n      T = \"t\",\n      L = \"l\"\n}\n\nexport const CELL_COLORS = {\n  \" \": \"#e5e9f0\",\n  \"o\": \"#bf616a\",\n  \"s\": \"#d08770\",\n  \"z\": \"#ebcb8b\",\n  \"i\": \"#a3be8c\",\n  \"j\": \"#b48ead\",\n  \"t\": \"#5e81ac\",\n  \"l\": \"#8fbcbb\"\n}\n\nexport enum ACTION {\n  MOVE_BLOCK_DOWN = \"MOVE_BLOCK_DOWN\",\n  MOVE_BLOCK_LEFT = \"MOVE_BLOCK_LEFT\",\n  MOVE_BLOCK_RIGHT = \"MOVE_BLOCK_RIGHT\",\n  ROTATE_BLOCK_LEFT = \"ROTATE_BLOCK_LEFT\",\n  ROTATE_BLOCK_RIGHT = \"ROTATE_BLOCK_RIGHT\"\n}\n\nconst o: Cell[][][] = [[\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.O    , CELL.O    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.O    , CELL.O    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n]]\n\nconst s: Cell[][][] = [[\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.S    , CELL.S    , CELL.EMPTY],\n  [CELL.S    , CELL.S    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.S    , CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.S    , CELL.S    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.S    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n]]\n\nconst z: Cell[][][] = [[\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.Z    , CELL.Z    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.Z    , CELL.Z    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.EMPTY, CELL.Z    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.Z    , CELL.Z    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.Z    , CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n]]\n\nconst i: Cell[][][] = [[\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.I    , CELL.I    , CELL.I    , CELL.I    ],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.EMPTY, CELL.I    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.I    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.I    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.I    , CELL.EMPTY, CELL.EMPTY]\n]]\n\nconst j: Cell[][][] = [[\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.J    , CELL.J    , CELL.J    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.J    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.EMPTY, CELL.J    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.J    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.J    , CELL.J    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.J    , CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.J    , CELL.J    , CELL.J    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.EMPTY, CELL.J, CELL.J, CELL.EMPTY],\n  [CELL.EMPTY, CELL.J, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.J, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n]]\n\nconst t: Cell[][][] = [[\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.T    , CELL.T    , CELL.T    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.T    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.EMPTY, CELL.T    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.T    , CELL.T    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.T    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.EMPTY, CELL.T    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.T    , CELL.T    , CELL.T    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.EMPTY, CELL.T    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.T    , CELL.T    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.T    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n\n]]\n\nconst l: Cell[][][] = [[\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.L    , CELL.L    , CELL.L    , CELL.EMPTY],\n  [CELL.L    , CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.L    , CELL.L    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.L    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.L    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.EMPTY, CELL.EMPTY, CELL.L    , CELL.EMPTY],\n  [CELL.L    , CELL.L    , CELL.L    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n],\n[\n  [CELL.EMPTY, CELL.L    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.L    , CELL.EMPTY, CELL.EMPTY],\n  [CELL.EMPTY, CELL.L    , CELL.L    , CELL.EMPTY],\n  [CELL.EMPTY, CELL.EMPTY, CELL.EMPTY, CELL.EMPTY]\n\n]]\n \nexport const BLOCKS: Record<string, Cell[][][]> = {\n  \"o\": o,\n  \"s\": s,\n  \"z\": z,\n  \"i\": i,\n  \"j\": j,\n  \"t\": t,\n  \"l\": l\n}\n","import { ROWS, COLUMNS, CELL, BLOCKS, SCORES_PER_LINES } from \"src/constants\"\nimport { Grid, Block, Row, PlayfieldState, Cell } from \"src/types\"\nimport { sum } from \"src/utils\"\n\nexport const generateEmptyRow = (): Row =>\n  Array(COLUMNS).fill(CELL.EMPTY)\n\nexport const generateGrid = (): Grid =>\n  Array(ROWS).fill(null).map(() => generateEmptyRow() )\n\nexport const generateBlock = (shape: string): Block => ({\n  shape: shape,\n  offsetX: 3,\n  offsetY: 0,\n  rotation: 0\n})\n\nexport function randomBlock(): Block {\n  const possibleBlocks = [CELL.I, CELL.J, CELL.L, CELL.O, CELL.S, CELL.T, CELL.Z]\n  const randomIndex = Math.floor(Math.random() * possibleBlocks.length)\n  return generateBlock(possibleBlocks[randomIndex])\n}\n\nexport function canBlockMove(block: Block, grid: Grid): boolean {\n  const shape: Grid = BLOCKS[block.shape][block.rotation]\n  const indexes = [0, 1, 2, 3]\n\n  return indexes.every((rowIndex) => {\n    return indexes.every((columnIndex) => {\n      const x = block.offsetX + rowIndex\n      const y = block.offsetY + columnIndex\n\n      const canMove = shape[columnIndex][rowIndex] !== CELL.EMPTY && (\n        x < 0 // left border\n        || x > COLUMNS - 1 // right border\n        || y > ROWS - 1 // bottom border\n        || grid[y][x] !== CELL.EMPTY // already filled\n      )\n\n      return !canMove\n    })\n  })\n}\n\nexport function restBlock(block: Block, grid: Grid): Grid {\n  const shape: Grid = BLOCKS[block.shape][block.rotation]\n  const indexes = [0, 1, 2, 3]\n  const newGrid = [...grid]\n\n  indexes.forEach((rowIndex) => {\n    indexes.forEach((columnIndex) => {\n      const x = block.offsetX + rowIndex\n      const y = block.offsetY + columnIndex\n      const cell = shape[columnIndex][rowIndex]\n\n      if (cell !== CELL.EMPTY) newGrid[y][x] = cell\n    })\n  })\n\n  return newGrid\n}\n\nexport function totalCompletedRows(grid: Grid): number {\n  return sum(grid.map((row: Row) => {\n    const complete = row.every((cell: Cell) => cell !== CELL.EMPTY) \n    return complete ? 1 : 0\n  }))\n}\n\nexport function removeCompletedRows(grid: Grid): Grid {\n  const newGrid = [...grid]\n  grid.forEach((row: Row, rowIndex: number) => {\n    const complete = row.every((cell: Cell) => cell !== CELL.EMPTY)\n    if (!complete) return\n    newGrid.splice(rowIndex, 1) // remove completed row\n    newGrid.unshift(generateEmptyRow()) // add new empty row on top\n  })\n\n  return newGrid\n}\n\nexport function increaseScore({ score, level }: PlayfieldState, completedRowsCount: number): number {\n  console.log({ score, perLine: SCORES_PER_LINES[completedRowsCount], completedRowsCount })\n  return score + SCORES_PER_LINES[completedRowsCount] * (level + 1)\n}\n","type TimesFunction = (index: number) => any\nexport const times = (number: number, f: TimesFunction): any[] =>\n  Array.from({ length: number }).map((_, i) => f(i))\n\nexport const sum = (array: number[]): number =>\n  array.reduce((a: number, b: number) => a + b, 0)\n","import { PlayfieldState, Action } from \"src/types\"\nimport { ACTION, BLOCKS } from \"src/constants\"\nimport { canBlockMove, restBlock, randomBlock, removeCompletedRows, totalCompletedRows, increaseScore } from \"src/lib\"\n\nconst moveBlockDown = (state: PlayfieldState): PlayfieldState => {\n  const offsetY = state.currentBlock.offsetY + 1\n  const currentBlock = { ...state.currentBlock, offsetY: offsetY }\n  const canMove = canBlockMove(currentBlock, state.grid)\n\n  if (canMove) return { ...state, currentBlock: currentBlock }\n\n  const completedRowsCount = totalCompletedRows(state.grid)\n  const newGrid = removeCompletedRows(restBlock(state.currentBlock, state.grid))\n  console.log(totalCompletedRows)\n  return {\n    ...state,\n    grid: newGrid,\n    currentBlock: state.nextBlock,\n    nextBlock: randomBlock(),\n    score: increaseScore(state, completedRowsCount)\n  }\n}\n\nconst moveBlockLeft = (state: PlayfieldState): PlayfieldState => {\n  const offsetX = state.currentBlock.offsetX - 1\n  const currentBlock = { ...state.currentBlock, offsetX: offsetX }\n  return canBlockMove(currentBlock, state.grid) ?\n    { ...state, currentBlock: currentBlock } : state\n}\n\nconst moveBlockRight = (state: PlayfieldState): PlayfieldState => {\n  const offsetX = state.currentBlock.offsetX + 1\n  const currentBlock = { ...state.currentBlock, offsetX: offsetX }\n  return canBlockMove(currentBlock, state.grid) ?\n    { ...state, currentBlock: currentBlock } : state\n}\n\nconst rotateBlockLeft = (state: PlayfieldState): PlayfieldState => {\n  const rotations = BLOCKS[state.currentBlock.shape]\n  const currentRotation = state.currentBlock.rotation\n  const currentBlock = (currentRotation >= rotations.length - 1) ?\n    { ...state.currentBlock, rotation: 0 } :  { ...state.currentBlock, rotation: currentRotation + 1 }\n\n  return canBlockMove(currentBlock, state.grid) ?\n    { ...state, currentBlock: currentBlock } : state\n}\n\nconst rotateBlockRight = (state: PlayfieldState): PlayfieldState => {\n  return state\n}\n\nexport default function reducer(state: PlayfieldState, action: Action) {\n  switch(action.type) {\n    case ACTION.MOVE_BLOCK_DOWN:\n      return moveBlockDown(state)\n    case ACTION.MOVE_BLOCK_LEFT:\n      return moveBlockLeft(state)\n    case ACTION.MOVE_BLOCK_RIGHT:\n      return moveBlockRight(state)\n    case ACTION.ROTATE_BLOCK_LEFT:\n      return rotateBlockLeft(state)\n    case ACTION.ROTATE_BLOCK_RIGHT:\n      return rotateBlockRight(state)\n    default:\n      return state\n  }\n}\n","import React, { createContext, useReducer, Dispatch } from \"react\"\nimport { PlayfieldState } from \"src/types\"\nimport { reducer } from \"src/state\"\nimport { generateGrid, randomBlock } from \"src/lib\"\nimport { ACTION } from \"./constants\"\n\nconst initialState: PlayfieldState = {\n  level: 0,\n  score: 0,\n  grid: generateGrid(),\n  currentBlock: randomBlock(),\n  nextBlock: randomBlock(),\n  keybindings: {\n    37: ACTION.MOVE_BLOCK_LEFT,\n    38: ACTION.ROTATE_BLOCK_LEFT,\n    39: ACTION.MOVE_BLOCK_RIGHT,\n    40: ACTION.MOVE_BLOCK_DOWN,\n    41: ACTION.ROTATE_BLOCK_RIGHT\n  }\n}\n\ntype PlayfieldContext = {\n  state: PlayfieldState,\n  dispatch: Dispatch<any>\n}\n\nexport const PlayfieldContext = createContext<PlayfieldContext>({\n  state: initialState,\n  dispatch: () => null\n})\n\ntype Props = {\n  children: React.ReactNode\n}\n\nexport default function PlayfieldProvider({ children }: Props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <PlayfieldContext.Provider value={{state, dispatch}}>\n      {children}\n    </PlayfieldContext.Provider>\n  )\n}\n","import React, { useContext } from \"react\"\nimport Canvas from \"src/components/Canvas\"\nimport { COLUMNS, ROWS, CELL_SIZE, PADDING, CELL_COLORS, BLOCKS, ACTION, CELL } from \"src/constants\"\nimport { Cell } from \"src/types\"\nimport { PlayfieldContext } from \"src/PlayfieldProvider\"\nimport { useInterval } from \"src/hooks\"\n\nexport default function Arena() {\n  const { state, dispatch } = useContext(PlayfieldContext)\n  const { grid, currentBlock } = state\n\n  const width = COLUMNS * (CELL_SIZE + PADDING)\n  const height = ROWS * (CELL_SIZE + PADDING)\n\n  const drawGrid = (context: CanvasRenderingContext2D) => {\n    for (let x = 0, i = 0; i < COLUMNS; x+=CELL_SIZE + PADDING, i++) {\n      for (let y = 0, j=0; j < ROWS; y+=CELL_SIZE + PADDING, j++) {\n        const cell: Cell = grid[j][i]\n        context.fillStyle = CELL_COLORS[cell]\n        context.fillRect(x, y, CELL_SIZE, CELL_SIZE);\n      }\n    }\n  }\n\n  const drawCurrentBlock = (context: CanvasRenderingContext2D) => {\n    for (let x = 0, i = 0; i < 4; x+=CELL_SIZE + PADDING, i++) {\n      for (let y = 0, j=0; j < 4; y+=CELL_SIZE + PADDING, j++) {\n        const { shape, rotation } = currentBlock\n        const rectX = (CELL_SIZE + PADDING) * currentBlock.offsetX + x\n        const rectY = (CELL_SIZE + PADDING) * currentBlock.offsetY + y\n        const cell: Cell = BLOCKS[shape][rotation][j][i]\n        if (cell !== CELL.EMPTY) {\n          context.fillStyle = CELL_COLORS[cell]\n          context.fillRect(rectX, rectY, CELL_SIZE, CELL_SIZE);\n        }\n      }\n    }\n  }\n\n  const draw = (context: CanvasRenderingContext2D) => {\n    context.clearRect(0, 0, width, height);\n    drawGrid(context)\n    drawCurrentBlock(context)\n  }\n\n  useInterval(() => dispatch({ type: ACTION.MOVE_BLOCK_DOWN }), 1000)\n\n  return (\n    <Canvas draw={draw} width={width} height={height} delay={2} />\n  )\n}\n","import React, { useEffect, useContext } from \"react\"\nimport { PlayfieldContext } from \"src/PlayfieldProvider\"\n\nexport default function Keybindings() {\n  const { state, dispatch } = useContext(PlayfieldContext)\n  const { keybindings } = state\n\n  useEffect(() => {\n    const handleKey = (event: KeyboardEvent) => {\n      dispatch({ type: keybindings[event.keyCode] })\n    }\n\n    window.addEventListener(\"keydown\", handleKey);\n    return () => window.removeEventListener(\"keydown\", handleKey);\n  }, [keybindings, dispatch])\n\n  return (\n    <></>\n  )\n}\n","import React, { useContext } from \"react\"\nimport { PlayfieldContext } from \"src/PlayfieldProvider\"\n\nexport default function Score() {\n  const { state: { score } } = useContext(PlayfieldContext)\n  console.log(score)\n\n  return (\n    <div>Score: {score}</div>\n  )\n}\n","import React, { useContext } from \"react\"\nimport { PlayfieldContext } from \"src/PlayfieldProvider\"\n\nexport default function Level() {\n  const { state: { level } } = useContext(PlayfieldContext)\n\n  return (\n    <div>Level: {level}</div>\n  )\n}\n","import React, { useContext } from \"react\"\nimport { PlayfieldContext } from \"src/PlayfieldProvider\"\nimport Canvas from \"../Canvas\"\nimport { CELL_SIZE, PADDING, BLOCKS, CELL_COLORS } from \"src/constants\"\nimport { Cell } from \"src/types\"\n\nexport default function Preview() {\n  const { state: { nextBlock } } = useContext(PlayfieldContext)\n\n  const size = 4 * (CELL_SIZE + PADDING)\n\n  const draw = (context: CanvasRenderingContext2D) => {\n    const grid = BLOCKS[nextBlock.shape][nextBlock.rotation]\n\n    for (let x = 0, i = 0; i < 4; x+=CELL_SIZE + PADDING, i++) {\n      for (let y = 0, j=0; j < 4; y+=CELL_SIZE + PADDING, j++) {\n        const cell: Cell = grid[j][i]\n        context.fillStyle = CELL_COLORS[cell]\n        context.fillRect(x, y, CELL_SIZE, CELL_SIZE);\n      }\n    }\n  }\n\n  return (\n    <Canvas draw={draw} width={size} height={size} delay={2}/>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  color: red;\n  display: flex;\n  justify-content: center;\n`\n\nexport const SideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n","import React from \"react\"\nimport Arena from \"src/components/Arena\"\nimport Keybindings from \"src/components/Keybindings\"\nimport PlayfieldProvider from \"src/PlayfieldProvider\"\nimport Score from \"src/components/Score\"\nimport Level from \"src/components/Level\"\nimport Preview from \"src/components/Preview\"\nimport { SideContainer } from \"src/styled\"\n\nexport default function Playfield() {\n  return (\n    <PlayfieldProvider>\n      <Keybindings />\n      <Arena />\n      <SideContainer>\n        <Preview />\n        <Score />\n        <Level />\n      </SideContainer>\n    </PlayfieldProvider>\n )\n}\n","import React from \"react\"\nimport Playfield from \"src/components/Playfield\"\nimport { Container } from \"src/styled\"\n\nexport default function Game() {\n  return (\n    <Container>\n      <Playfield />\n    </Container>\n  )\n}\n","import React from \"react\"\nimport Game from \"./components/Game\"\n\nexport default function App() {\n  return (\n    <Game />\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}